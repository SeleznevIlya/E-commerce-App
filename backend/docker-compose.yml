version: "3.1"

services:

  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - 5432:5432
    env_file:
      - .env-non-dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
  
  redis:
    image: redis:7
    container_name: redis

  celery:
    image: celery:5.3.6
    build:
      context: .
    container_name: celery
    command: ["/app/docker/celery.sh", "celery"]
    env_file:
      - .env-non-dev
    depends_on:
      - redis
  
  flower:
    image: flower
    build:
      context: .
    container_name: flower
    command: ["/app/docker/celery.sh", "flower"]
    env_file:
      - .env-non-dev
    depends_on:
      - redis
    ports:
      - 5555:5555

  backend:
    build:
      context: .
    container_name: backend
    env_file:
      - .env-non-dev
    depends_on:
      - postgres
      - redis
    command: ["/app/docker/app.sh"]
    ports:
      - 7777:8000

  prometheus:
    image: prom/prometheus:v2.43.0
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheusdata:/prometheus
    restart: unless-stopped
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:9.4.7
    container_name: grafana
    volumes:
      - grafanadata:/var/lib/grafana
    restart: unless-stopped
    ports:
      - 3000:3000

networks:
  custom:
    driver: bridge
volumes:
  postgres-data:
  grafanadata:
  prometheusdata: